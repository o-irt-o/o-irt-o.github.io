# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Build and deploy a Hugo site

on:
  # Runs on pushes and pull requests targeting the default branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  #workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  #pages: write
  #id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
#concurrency:
#  group: "pages"
#  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.137.1
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb          
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 1
#      - name: Setup Pages
#        id: pages
#        uses: actions/configure-pages@v5
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
          TZ: America/Los_Angeles
        run: |
          hugo \
            --gc \
            --minify 
      - name: ðŸ“‚ Sync Files
        uses: SamKirkland/web-deploy@v1
        with:
          target-server:    ${{ secrets.DEPLOY_HOST }}
          remote-user:      ${{ secrets.DEPLOY_USER }}
          private-ssh-key:  ${{ secrets.DEPLOY_KEY }}
          source-path:      ./public/
          destination-path: ~/o-irt-o.nl/htdocs/
          #rsync-options:    -avzr --delete
#      - name: rsync deploy
#        uses: burnett01/rsync-deployments@5.2.1
#        #if:   github.ref == 'refs/heads/main' || github.ref == 'refs/heads/deploy'
#        with:
#          switches: -avzr --delete
#          path: public/
#          remote_path: o-irt-o.nl/htdocs/
#          remote_host: ${{ secrets.DEPLOY_HOST }}
#          remote_user: ${{ secrets.DEPLOY_USER }}
#          remote_key: ${{ secrets.DEPLOY_KEY }}
#        \
#            --baseURL "${{ steps.pages.outputs.base_url }}/"          

#      - name: Upload artifact
#        uses: actions/upload-pages-artifact@v3
#        with:
#          path: ./public

#  # Deployment job
#  deploy:
#    environment:
#      name: github-pages
#      url: ${{ steps.deployment.outputs.page_url }}
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: Deploy to GitHub Pages
#        id: deployment
#        uses: actions/deploy-pages@v4